on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  # Trigger only when pushing a version tag, e.g., v1.0.0

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Package application
        run: npx electron-builder --linux  # Build for Linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Todometer-ubuntu
          path: dist/versions/

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Package application
        run: npx electron-builder --mac  # Build for macOS
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Todometer-macos
          path: dist/versions/

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Package application
        run: npx electron-builder --win  # Build for Windows
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Todometer-windows
          path: dist/versions/

  release:
    needs: [build-ubuntu, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist/versions

  #    - name: Create Release if not exists
   #     id: create_release
    #    run: |
     #     TAG_NAME=${GITHUB_REF#refs/tags/}
      #    RELEASE_URL=$(curl -s -X POST https://api.github.com/repos/${{ github.repository }}/releases \
       #   -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        #  -d "{\"tag_name\":\"$TAG_NAME\",\"name\":\"Release $TAG_NAME\",\"body\":\"Release of version $TAG_NAME\"}" | jq -r .url)
         # echo "Release URL: $RELEASE_URL"
        #env:
         # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/versions/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
